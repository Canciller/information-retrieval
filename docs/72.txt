https://en.wikipedia.org/wiki/Illustris_project
Illustris project
The Illustris project is an ongoing series of astrophysical simulations run by an international collaboration of scientists. The aim is to study the processes of galaxy formation and evolution in the universe with a comprehensive physical model. Early results are described in a number of publications following widespread press coverage. The project publicly released all data produced by the simulations in April, 2015. A follow-up to the project, IllustrisTNG, was presented in 2017.
The original Illustris project was carried out by Mark Vogelsberger and collaborators as the first large-scale galaxy formation application of Volker Springels novel Arepo code.
The Illustris project includes large-scale cosmological simulations of the evolution of the universe, spanning initial conditions of the Big Bang, to the present day, 13.8 billion years later. Modeling, based on the most precise data and calculations currently available, are compared to actual findings of the observable universe in order to better understand the nature of the universe, including galaxy formation, dark matter and dark energy.
The simulation includes many physical processes which are thought to be critical for galaxy formation. These include the formation of stars and the subsequent feedback due to supernova explosions, as well as the formation of super-massive black holes, their consumption of nearby gas, and their multiple modes of energetic feedback.
Images, videos, and other data visualizations for public distribution are available at official media page.
The main Illustris simulation was run on the Curie supercomputer at CEA (France) and the SuperMUC supercomputer at the Leibniz Computing Center (Germany). A total of 19 million CPU hours was required, using 8,192 CPU cores. The peak memory usage was approximately 25 TB of RAM. A total of 136 snapshots were saved over the course of the simulation, totaling over 230 TB cumulative data volume.
A code called Arepo was used to run the Illustris simulations. It was written by Volker Springel, the same author as the GADGET code. The name is derived from the Sator Square. This code solves the coupled equations of gravity and hydrodynamics using a discretization of space based on a moving Voronoi tessellation. It is optimized for running on large, distributed memory supercomputers using a MPI approach.
In April, 2015 (eleven months after the first papers were published) the project team publicly released all data products from all simulations. All original data files can be directly downloaded through the data release webpage. This includes group catalogs of individual halos and subhalos, merger trees tracking these objects through time, full snapshot particle data at 135 distinct time points, and various supplementary data catalogs. In addition to direct data download, a web-based API allows for many common search and data extraction tasks to be completed without needing access to the full data sets.
In December 2018, the Illustris simulation was recognized by Deutsche Post through a special series stamp.
The IllustrisTNG project, the next generation follow up to the original Illustris simulation, was first presented in July, 2017. The project was achieved by a team of scientists from Germany and the U.S. led by Prof. Volker Springel. First, a new physical model was developed, which among other features now includes Magnetohydrodynamics. Three simulations are planned, which are different volumes at different resolutions. The intermediate simulation (TNG100) is equivalent to the original Illustris simulation.
Unlike Illustris, it was run on the Hazel Hen machine at the High Performance Computing Center, Stuttgart in Germany. Up to 25,000 computer cores were employed.
In December 2018 the simulation data from IllustrisTNG was released publicly. The data service includes a JupyterLab interface.
Stamp of German Postal Service in honor of the Illustris Simulation (2018)
Galaxies predicted by the Illustris Simulation
IllustrisTNG: the Illustris follow-up simulation